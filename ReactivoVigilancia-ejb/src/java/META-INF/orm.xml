<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings version="2.1" 
    xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- JPA Named Native Queries -->
    <!-- Reporte de Reactivo Vigilancia -->
    <named-native-query name="reporteReactivoVigilancia">
        <query>
            SELECT  
            reactivo_eventos.reporte as reporte,           
            reactivo_eventos.descrip_efecto  as descrip_efecto,           
            reactivo_eventos.fecha_ingreso  as fecha_ingreso,           
            reactivo_institucion.institucion  as institucion,           
            reactivo_institucion.identificacion  as identificacion,           
            reactivo_institucion.direccion  as direccion,           
            reactivo_institucion.naturaleza  as naturaleza,           
            reactivo_paciente.nombre_paciente  as nombre_paciente,           
            reactivo_paciente.tipidentifi  as tipidentifi,           
            reactivo_paciente.identifi  as identifi_paciente,           
            reactivo_producto.nombre_reactivo  as nombre_reactivo,           
            reactivo_producto.nroregsan  as nroregsan,           
            reactivo_producto.fecha_venci  as fecha_venci,           
            reactivo_producto.lote  as lote,    
            reactivo_eventos.reportepre as reportepre
            FROM 
            reactivo_eventos, reactivo_institucion, reactivo_paciente, reactivo_producto     
            WHERE ( reactivo_eventos.reporte = reactivo_institucion.reporte ) and ( reactivo_eventos.reporte = reactivo_paciente.reporte) 
            and ( reactivo_eventos.reporte = reactivo_producto.reporte ) 
            and ((reactivo_eventos.fecha_ingreso &gt;= ?1) and (reactivo_eventos.fecha_ingreso &lt;= ?2))
            order by reactivo_eventos.reporte desc
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- Reporte de Personas Internet de Reactivo Vigilancia -->
    <named-native-query name="reportePersonaInternet">
       <query>
           SELECT  
           reactivo_usuarios_internet.identificacion_empresa as identificacion_empresa,           
           reactivo_usuarios_internet.tipidentificacion_empresa as tipidentificacion_empresa,           
           reactivo_usuarios_internet.nombre_empresa as nombre_empresa,           
           reactivo_usuarios_internet.direccion_empresa as direccion_empresa,           
           reactivo_usuarios_internet.telefono_empresa as telefono_empresa,           
           reactivo_usuarios_internet.email_empresa as email_empresa,           
           reactivo_usuarios_internet.fax as fax,           
           reactivo_usuarios_internet.identificacion_persona as identificacion_persona,           
           reactivo_usuarios_internet.tipidentificacion_persona as tipidentificacion_persona,           
           reactivo_usuarios_internet.nombre_persona as nombre_persona,           
           reactivo_usuarios_internet.cargo_persona as cargo_persona,           
           reactivo_usuarios_internet.telefono_persona as telefono_persona,           
           reactivo_usuarios_internet.email_persona as email_persona,           
           reactivo_usuarios_internet.usuario as usuario,           
           reactivo_usuarios_internet.password as password,
           reactivo_usuarios_internet.activo as activo,           
           reactivo_usuarios_internet.ID_Rol_Usuario as ID_Rol_Usuario,           
           reactivo_usuarios_internet.fecha_ingreso as fecha_ingreso,           
           reactivo_usuarios_internet.estado_usuario as estado_usuario,           
           reactivo_usuarios_internet.clasificacion_usuario as clasificacion_usuario,           
           paises.pais as pais,           
           departamentos.descripcion as departamento,          
           municipios.descripcion as municipio   
           FROM 
           reactivo_usuarios_internet, departamentos, paises, municipios     
           WHERE ( reactivo_usuarios_internet.cod_depart = departamentos.cod_depart ) and          
           ( reactivo_usuarios_internet.cdg_pais = paises.cdg_pais ) and          
           ( reactivo_usuarios_internet.cod_mun = municipios.cod_mun ) 
            and 
           (( reactivo_usuarios_internet.fecha_ingreso &gt;= ?1) and          
            ( reactivo_usuarios_internet.fecha_ingreso &lt;= ?2)) 
            order by reactivo_usuarios_internet.identificacion_empresa desc
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <named-native-query name="reporteInscritosRed">
       <query>
        SELECT  
            reactivo_red.id, 
            reactivo_red.fecha_solicitud, 
            reactivo_red.nombre_institucion, 
            reactivo_red.naturaleza, 
            reactivo_red.complejidad, 
            reactivo_red.direccion_organizacion, 
            reactivo_red.nit, 
            reactivo_red.email_corporativo, 
            reactivo_red.cdg_funcionario, 
            reactivo_red.telefono_organiz, 
            reactivo_red.fax_organiz, 
            reactivo_red.ext_organiz, 
            reactivo_red.otra_modalidad, 
            reactivo_modalidad.descripcion, 
            municipios_a.descripcion as departamento, 
            departamentos_a.descripcion as municipio, 
            paises_a.pais, 
            reactivo_red_persona.fecha_solicitud as fecha_solicitud2, 
            reactivo_red_persona.nombre_solic, 
            reactivo_red_persona.area_empresa, 
            reactivo_red_persona.cargos, 
            reactivo_red_persona.direccion_solicitante, 
            reactivo_red_persona.telefono_solic, 
            reactivo_red_persona.email_personal, 
            paises_b.pais as pais_rep, 
            municipios_b.descripcion as departamento_rep, 
            departamentos_b.descripcion as municipio_rep, 
            reactivo_red_persona.celular_solic, 
            reactivo_red_persona.cdg_funcionario as cdg_funcionario2, 
            reactivo_red_persona.cedula_solicitante, 
            reactivo_red_persona.id_red     
            FROM reactivo_red, 
            reactivo_modalidad, municipios municipios_a, departamentos departamentos_a, paises paises_a, reactivo_red_persona, paises paises_b, municipios municipios_b, departamentos departamentos_b     
            WHERE 
            (reactivo_red.cdg_modalidad = reactivo_modalidad.cdg_modalidad) and          
            (reactivo_red.cod_mun = municipios_a.cod_mun ) and          
            (reactivo_red.cod_depart = departamentos_a.cod_depart) and          
            (paises_a.cdg_pais = reactivo_red.pais_organiz ) and
            (reactivo_red.id = reactivo_red_persona.id_red ) and          
            (paises_b.cdg_pais = reactivo_red_persona.pais_solic) and          
            (municipios_b.cod_mun = reactivo_red_persona.cod_mun) and
            (departamentos_b.cod_depart = reactivo_red_persona.cod_depart) and 
            ((reactivo_red.fecha_solicitud &gt;= ?1 and  reactivo_red.fecha_solicitud &lt;= ?2))
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- Reporte FRIAHR -->
    <named-native-query name="reporteFriahr">
       <query>
        SELECT
            reactivo_friarh.friarh ,          
            (SELECT TOP 1 tt.descripcion FROM dbo.tecno_tipoalertas tt WHERE tt.cdg_tipoalertas =  reactivo_friarh.cdg_tipoalerta) as cdg_tipoalerta,           
            reactivo_friarh.fecha_ingreso ,           
            reactivo_friarh.nombre_reac ,           
            reactivo_friarh.nroregsan ,           
            reactivo_friarh.marca ,           
            reactivo_friarh.modelo ,           
            reactivo_friarh.lote ,           
            reactivo_friarh.cdg_riesgo ,           
            (select TOP 1 rf.descripcion from dbo.reactivo_fuente rf where rf.cdg_fuente = reactivo_friarh.fuente) AS fuente ,           
            reactivo_friarh.causas ,           
            reactivo_friarh.medidas_correctivas ,           
            rn.descripcion AS cdg_notificante,           
            reactivo_friarh.razon_social_notificante ,           
            reactivo_friarh.nit ,           
            reactivo_friarh.direccion,
            d.descripcion departamento,
            m.descripcion ciudad,
            reactivo_friarh.telefono,
            tp.descripcion profesion,
            reactivo_friarh.email,
            reactivo_friarh.nombre_notificante,
            reactivo_friarh.otro_notificante,
            re.descripcion AS estado_reac,
            reactivo_friarh.reporte_eventos,
            reactivo_friarh.cuantos_eventos,
            reactivo_friarh.descripcion_evento,
            reactivo_friarh.fecha_hurto,
            reactivo_friarh.descripcion_hurto,
            (case WHEN reactivo_friarh.fiscalia = 'S' THEN 'SI'  WHEN reactivo_friarh.fiscalia = 'N' THEN 'NO' ELSE '' end)as fiscalia,
            reactivo_friarh.autorizacion,
            (case  when reactivo_friarh.estado_reporte = 'A' THEN 'Abierto' WHEN       reactivo_friarh.estado_reporte ='C' THEN 'Cerrado' WHEN       reactivo_friarh.estado_reporte ='S' THEN 'Seguimiento' else '' end) as estado_reporte,
            (case WHEN reactivo_friarh.internet = 'S' THEN 'SI'  WHEN reactivo_friarh.internet = 'N' THEN 'NO' ELSE '' end) as internet,
            reactivo_friarh.expediente_reac,
            reactivo_friarh.nombre_agencia,
            reactivo_friarh.fecha_radicado,
            reactivo_friarh.radicado,
            reactivo_friarh.problema_reac,
            reactivo_friarh.otro_estadoreac  
            FROM reactivo_friarh  left join dbo.municipios m
            ON dbo.reactivo_friarh.cod_mun = m.cod_mun
            LEFT JOIN dbo.departamentos d ON dbo.reactivo_friarh.cod_depart = d.cod_depart
            LEFT JOIN dbo.tecno_profesion tp ON dbo.reactivo_friarh.cdg_profesion = tp.cdg_profesion  
            LEFT JOIN dbo.reactivo_estado re ON dbo.reactivo_friarh.estado_reac = re.cdg_estado
            LEFT JOIN dbo.reactivo_notificante rn ON dbo.reactivo_friarh.cdg_notificante = rn.cdg_notificante
            WHERE 
            (reactivo_friarh.fecha_ingreso &gt;= ?1) and          
            ( reactivo_friarh.fecha_ingreso &lt;= ?2)
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <named-native-query name="reporteFriahrSecretaria">
       <query>
        SELECT  
            reactivo_friarh.friarh ,          
            (SELECT TOP 1 tt.descripcion FROM dbo.tecno_tipoalertas tt WHERE tt.cdg_tipoalertas =  reactivo_friarh.cdg_tipoalerta) as cdg_tipoalerta,           
            reactivo_friarh.fecha_ingreso ,           
            reactivo_friarh.nombre_reac ,           
            reactivo_friarh.nroregsan ,           
            reactivo_friarh.marca ,           
            reactivo_friarh.modelo ,           
            reactivo_friarh.lote ,           
            reactivo_friarh.cdg_riesgo ,           
            (select TOP 1 rf.descripcion from dbo.reactivo_fuente rf where rf.cdg_fuente = reactivo_friarh.fuente) AS fuente ,           
            reactivo_friarh.causas ,           
            reactivo_friarh.medidas_correctivas ,           
            rn.descripcion AS cdg_notificante,           
            reactivo_friarh.razon_social_notificante ,           
            reactivo_friarh.nit ,           
            reactivo_friarh.direccion,
            d.descripcion departamento,
            m.descripcion ciudad,
            reactivo_friarh.telefono,
            tp.descripcion profesion,
            reactivo_friarh.email,
            reactivo_friarh.nombre_notificante,
            reactivo_friarh.otro_notificante,
            re.descripcion AS estado_reac,
            reactivo_friarh.reporte_eventos,
            reactivo_friarh.cuantos_eventos,
            reactivo_friarh.descripcion_evento,
            reactivo_friarh.fecha_hurto,
            reactivo_friarh.descripcion_hurto,
            (case WHEN reactivo_friarh.fiscalia = 'S' THEN 'SI'  WHEN reactivo_friarh.fiscalia = 'N' THEN 'NO' ELSE '' end)as fiscalia,
            reactivo_friarh.autorizacion,
            (case  when reactivo_friarh.estado_reporte = 'A' THEN 'Abierto' WHEN       reactivo_friarh.estado_reporte ='C' THEN 'Cerrado' WHEN       reactivo_friarh.estado_reporte ='S' THEN 'Seguimiento' else '' end) as estado_reporte,
            (case WHEN reactivo_friarh.internet = 'S' THEN 'SI'  WHEN reactivo_friarh.internet = 'N' THEN 'NO' ELSE '' end) as internet,
            reactivo_friarh.expediente_reac,
            reactivo_friarh.nombre_agencia,
            reactivo_friarh.fecha_radicado,
            reactivo_friarh.radicado,
            reactivo_friarh.problema_reac,
            reactivo_friarh.otro_estadoreac  
            FROM reactivo_friarh  left join dbo.municipios m
            ON dbo.reactivo_friarh.cod_mun = m.cod_mun
            LEFT JOIN dbo.departamentos d ON dbo.reactivo_friarh.cod_depart = d.cod_depart
            LEFT JOIN dbo.tecno_profesion tp ON dbo.reactivo_friarh.cdg_profesion = tp.cdg_profesion  
            LEFT JOIN dbo.reactivo_estado re ON dbo.reactivo_friarh.estado_reac = re.cdg_estado
            LEFT JOIN dbo.reactivo_notificante rn ON dbo.reactivo_friarh.cdg_notificante = rn.cdg_notificante
           WHERE 
                 dbo.reactivo_friarh.nit = ?1
            order by dbo.reactivo_friarh.fecha_ingreso desc
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Reporte de Registros de Reactivo Vigilancia -->
    <named-native-query name="registroRepReactivo">
       <query>
           SELECT  
           reactivo_red.id as id,           
           reactivo_red.fecha_solicitud as fecha_solicitud,           
           reactivo_red.nombre_institucion as nombre_institucion,           
           reactivo_red.naturaleza as naturaleza,           
           reactivo_red.complejidad as complejidad,           
           reactivo_red.direccion_organizacion as direccion_organizacion,           
           reactivo_red.nit as nit,           
           reactivo_red.email_corporativo as email_corporativo,           
           reactivo_red.cdg_funcionario as cdg_funcionario,           
           reactivo_red.telefono_organiz as telefono_organiz,           
           reactivo_red.fax_organiz as fax_organiz,           
           reactivo_red.ext_organiz as ext_organiz,           
           reactivo_red.otra_modalidad as otra_modalidad,           
           reactivo_modalidad.descripcion as descripcionmodalidad,           
           municipios_a.descripcion as municipio,           
           departamentos_a.descripcion as departamento,           
           paises_a.pais as pais,           
           reactivo_red_persona.fecha_solicitud as fecha_solicitud_solicitante,           
           reactivo_red_persona.nombre_solic as nombre_solic,           
           reactivo_red_persona.area_empresa as area_empresa,           
           reactivo_red_persona.cargos as cargos,           
           reactivo_red_persona.direccion_solicitante as direccion_solicitante,           
           reactivo_red_persona.telefono_solic as telefono_solic,           
           reactivo_red_persona.email_personal as email_personal,           
           paises_b.pais as pais_notificacion,           
           municipios_b.descripcion as municipio_notificacion,           
           departamentos_b.descripcion as departamento_notificacion,           
           reactivo_red_persona.celular_solic as celular_solic,           
           reactivo_red_persona.cdg_funcionario as cdg_funcionario_solicitante,           
           reactivo_red_persona.cedula_solicitante as cedula_solicitante,           
           reactivo_red_persona.id as id_red_persona   
           FROM 
           reactivo_red , reactivo_modalidad , municipios municipios_a , departamentos departamentos_a , 
           paises paises_a , reactivo_red_persona ,paises paises_b , municipios municipios_b ,           
           departamentos departamentos_b     
           WHERE ( reactivo_red.cdg_modalidad = reactivo_modalidad.cdg_modalidad ) and          
           (reactivo_red.cod_mun = municipios_a.cod_mun ) and          
           (reactivo_red.cod_depart = departamentos_a.cod_depart ) and          
           (paises_a.cdg_pais = reactivo_red.pais_organiz ) and          
           (reactivo_red.id = reactivo_red_persona.id_red ) and 
           (paises_b.cdg_pais = reactivo_red_persona.pais_solic ) and 
           (municipios_b.cod_mun = reactivo_red_persona.cod_mun ) and          
           (departamentos_b.cod_depart = reactivo_red_persona.cod_depart ) 
            and          
           ((reactivo_red.fecha_solicitud &gt;= ?1) and 
           (reactivo_red.fecha_solicitud &lt;= ?2)) 
            order by reactivo_red.fecha_solicitud desc
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Reporte en cero -->
    <named-native-query name="consultaReportesEnCero">
        <query>
             SELECT        
                         rr.radicadocero AS RADICADO, us.nombre_empresa AS EMPRESA, us.identificacion_empresa AS NIT, us.cod_depart AS COD_DPTO, dep.descripcion AS DEPARTAMENTO, us.cod_mun, m.descripcion AS MUNICIPIO, rr.trimestre, 
                         rr.year_trimestre AS ANIO_REPORTE, ro.nombre_rol AS TIPO_ACTOR, rr.notificacion, rr.fecha_actualiza, rr.observacion, rr.fecha_reporte, rr.idregistro, rr.usuario_id
            FROM         
	         dbo.reactivo_reportes_cero AS rr INNER JOIN
                         dbo.reactivo_usuarios_internet AS us ON rr.usuario_id = us.usuario INNER JOIN
                         dbo.reactivo_roles AS ro ON us.ID_Rol_Usuario = ro.IDROL INNER JOIN
                         dbo.departamentos AS dep ON us.cod_depart = dep.cod_depart INNER JOIN
                         dbo.municipios AS m ON us.cod_mun = m.cod_mun
             where 
             (rr.fecha_actualiza  &gt;= ?1 and 
              rr.fecha_actualiza &lt;= ?2)
             order by rr.fecha_reporte desc            
        </query>
       <!--
                SELECT distinct
                datos.radicadocero as NUMERO_RADICADO,            
                tui.nombre_empresa as RAZON_SOCIAL,
                tui.identificacion_empresa as NIT_EMPRESA,
                depto.descripcion as DEPARTAMENTO,
                muni.descripcion as MUNICIPIO,
                CASE datos.trimestre  WHEN '1' THEN 'Primer Trimestre (I)' 
                WHEN '2' THEN 'Segundo Trimestre (II)' 
                WHEN '3' THEN 'Tercer Trimestre (III)' 
                WHEN '4' THEN 'Cuarto Trimestre (IV)' END 
                as TRIMESTRE_REPORTADO,
                datos.year_trimestre as YEAR_TRIMESTRE,
                (select ru.nombre_rol from sivicos.dbo.reactivo_roles ru where ru.IDROL = tui.ID_Rol_Usuario) as TIPO_ACTOR,
                upper(datos.notificacion) as NOTIFICACION,
                datos.fecha_actualiza as FECHA_RADICADO,
                datos.observacion as OBSERVACION_REPORTANTE
                FROM
                sivicos.dbo.reactivo_usuarios_internet tui 
                  INNER JOIN
                  sivicos.dbo.reactivo_reportes_cero datos ON tui.usuario = datos.usuario_id
                  INNER JOIN
                  sivicos.dbo.departamentos depto ON tui.cod_depart = depto.cod_depart
                  INNER JOIN
                  sivicos.dbo.municipios muni ON (tui.cod_mun = muni.cod_mun and muni.cod_depart = depto.cod_depart)
                where datos.fecha_actualiza &gt;= ?1 and datos.fecha_actualiza &lt;= ?2 
                and (tui.ID_Rol_Usuario = 3 OR tui.ID_Rol_Usuario = 5)
                ORDER BY tui.nombre_empresa, datos.fecha_actualiza;
       -->
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Reporte en Cero Secretaría Departamental  -->
    <named-native-query name="consultaReportesEnCeroSecretaria">
        <query>
             SELECT        
                         rr.radicadocero AS RADICADO, us.nombre_empresa AS EMPRESA, us.identificacion_empresa AS NIT, us.cod_depart AS COD_DPTO, dep.descripcion AS DEPARTAMENTO, us.cod_mun, m.descripcion AS MUNICIPIO, rr.trimestre, 
                         rr.year_trimestre AS ANIO_REPORTE, ro.nombre_rol AS TIPO_ACTOR, rr.notificacion, rr.fecha_actualiza, rr.observacion, rr.fecha_reporte, rr.idregistro, rr.usuario_id
            FROM         
	         dbo.reactivo_reportes_cero AS rr INNER JOIN
                         dbo.reactivo_usuarios_internet AS us ON rr.usuario_id = us.usuario INNER JOIN
                         dbo.reactivo_roles AS ro ON us.ID_Rol_Usuario = ro.IDROL INNER JOIN
                         dbo.departamentos AS dep ON us.cod_depart = dep.cod_depart INNER JOIN
                         dbo.municipios AS m ON us.cod_mun = m.cod_mun
             where 
             (rr.fecha_actualiza  &gt;= ?1 and 
              rr.fecha_actualiza &lt;= ?2)
              and rr.depto = ?3
             order by rr.fecha_reporte desc            
       </query>
       <!--
            SELECT distinct
            datos.radicadocero as NUMERO_RADICADO,            
            tui.nombre_empresa as RAZON_SOCIAL,
            tui.identificacion_empresa as NIT_EMPRESA,
            depto.descripcion as DEPARTAMENTO,
            muni.descripcion as MUNICIPIO,
            CASE datos.trimestre  WHEN '1' THEN 'Primer Trimestre (I)' 
            WHEN '2' THEN 'Segundo Trimestre (II)' 
            WHEN '3' THEN 'Tercer Trimestre (III)' 
            WHEN '4' THEN 'Cuarto Trimestre (IV)' END 
            as TRIMESTRE_REPORTADO,
            datos.year_trimestre as YEAR_TRIMESTRE,
            (select ru.nombre_rol from sivicos.dbo.reactivo_roles ru where ru.IDROL = tui.ID_Rol_Usuario) as TIPO_ACTOR,
            upper(datos.notificacion) as NOTIFICACION,
            datos.fecha_actualiza as FECHA_RADICADO,
            datos.observacion as OBSERVACION_REPORTANTE
            FROM
            sivicos.dbo.reactivo_usuarios_internet tui 
              INNER JOIN
              sivicos.dbo.reactivo_reportes_cero datos ON tui.usuario = datos.usuario_id
              INNER JOIN
              sivicos.dbo.departamentos depto ON tui.cod_depart = depto.cod_depart
              INNER JOIN
              sivicos.dbo.municipios muni ON (tui.cod_mun = muni.cod_mun and muni.cod_depart = depto.cod_depart)
            where datos.fecha_actualiza &gt;= ?1 and datos.fecha_actualiza &lt;= ?2 
            and datos.depto = ?3
            and (tui.ID_Rol_Usuario = 3 OR tui.ID_Rol_Usuario = 5)   
            ORDER BY tui.nombre_empresa, datos.fecha_actualiza
       -->
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Consulta de registros de reportes trimestrales con evento -->
    <named-native-query name="consultaReportesTrimestrales">
       <query>
                        SELECT        
                         dbo.reactivo_eventos.reporte, dbo.reactivo_institucion.institucion, d.descripcion AS departamento, m.descripcion AS ciudad, dbo.reactivo_institucion.direccion, dbo.reactivo_institucion.identificacion, 
                         (CASE dbo.reactivo_institucion.complejidad WHEN '1' THEN 'Baja' WHEN '2' THEN 'Media' WHEN '3' THEN 'Alta' WHEN '4' THEN 'No Aplica' ELSE '' END) AS complejidad, 
                         (CASE dbo.reactivo_institucion.naturaleza WHEN 'PR' THEN 'Privada' WHEN 'PU' THEN 'Publica' WHEN 'MX' THEN 'Mixta' ELSE '' END) AS naturaleza, dbo.reactivo_paciente.nombre_paciente, rt.nombre_tipodoc AS tipidentifi, 
                         dbo.reactivo_paciente.identifi, (CASE dbo.reactivo_paciente.genero WHEN 'M' THEN 'Masculino' WHEN 'F' THEN 'Femenino' ELSE 'Sin Dato' END) AS genero, dbo.reactivo_paciente.edad, 
                         (CASE dbo.reactivo_paciente.edad_en WHEN 'D' THEN 'Dias' WHEN 'M' THEN 'Mes' WHEN 'A' THEN 'Años' WHEN 'S' THEN 'Semana' ELSE 'Sin Dato' END) AS edad_en, dbo.reactivo_producto.nombre_reactivo, 
                         dbo.reactivo_producto.nroregsan, rc.expediente, rc.codigoUnicoReactivo, rt2.nombre_tipodis AS codigoTipoDiagnostico, dbo.reactivo_producto.lote, rc.referencia, dbo.reactivo_producto.fecha_venci, 
                         (CASE dbo.reactivo_producto.procedencia WHEN 'N' THEN 'Nacional' WHEN 'I' THEN 'Importado' ELSE '' END) AS procedencia, 
                         CASE dbo.reactivo_producto.cadena_frio WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS cadena_frio, dbo.reactivo_producto.temperatura, 
                         CASE rc.categoriaReactivo WHEN 1 THEN 'Categoria I' WHEN 2 THEN 'Categoria II' WHEN 3 THEN 'Categoria III' ELSE '' END AS categoriaReactivo, 
                         CASE dbo.reactivo_producto.condici_almacen WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS condici_almacen, 
                         CASE rc.indRealizaRecepcion WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS indRealizaRecepcion, CASE dbo.reactivo_producto.certi_analisis WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS certi_analisis,
                          rg.fabricante, rg.importador, 
                         CASE dbo.reactivo_producto.area_funciona WHEN 1 THEN 'Laboratorio clinico' WHEN 2 THEN 'Laboratorio salud pública' WHEN 3 THEN 'Servicio transfusional' WHEN 4 THEN 'Banco de Sangre' WHEN 5 THEN 'Banco de Tejidos'
                          WHEN 6 THEN 'Banco de Gametos' ELSE '' END AS area_funciona, dbo.reactivo_eventos.fecha_ingreso, dbo.reactivo_eventos.descrip_efecto, 
                            (select top 1 descripcion from dbo.reactivo_desenlace where cdg_desenlace = dbo.reactivo_eventos.cdg_desenlace)
                        AS desenlace, 
                         dbo.reactivo_eventos.otro_desenlace, CASE rg.gestion_riesgo WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS gestion_riesgo, 
                         CASE rg.analisis_efecto WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS analisis_efecto, 
                         CASE rg.herramienta_analisis WHEN 1 THEN 'Protocolo de Londres' WHEN 2 THEN 'AMFE' WHEN 3 THEN 'Espina de pescado' WHEN 4 THEN 'Otro/Cual' ELSE '' END AS herramienta_analisis, rg.otra_herramienta, 
                         CASE rg.causa_efecto WHEN 2 THEN 'NO' WHEN 1 THEN 'SI' ELSE '' END AS causa_efecto, cp.termino_ea AS causa_probable, cp.descripcion_ea AS descripcion_causa, cp.cdg_causa AS codigoCausa, 
                         CASE rg.acciones WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS acciones, rg.descripcion_acciones, rg.enviado_distri_import, rg.fecha_notificacion, rc.fechaEnvioReactivo, rr.nombres_apellidos, rr.profesion, 
                         rc.organizacion, rr.direccion AS direccion_reportante, rr.telefono, dp.descripcion AS cod_depart, mn.descripcion AS cod_mun, rr.email, rr.fecha_notificacion AS fecha_notificacion_reportante, 
                         CASE rr.divulgacion WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS divulgacion, rt3.nombre_tiporeportante AS cdg_tiporeportante, 
                         rc.estadoReporte AS estadoReporte, rc.fechaGestionEnte, rc.gestionEnte, 
                         rc.estadoGestionEnte AS estadoGestionEnte, rc.fechaGestionInvima, rc.observacionInvima,
                         rg.causa_probable as causa_probablecode,
                         (select tcaup.termino_ea from dbo.reactivo_causa_probable tcaup where tcaup.cdg_causa = rg.causa_probable) as termino,
                         (select tcaup.descripcion_ea from dbo.reactivo_causa_probable tcaup where tcaup.cdg_causa = rg.causa_probable) as descripcion_causaprob
FROM            dbo.reactivo_eventos LEFT OUTER JOIN
                         dbo.reactivo_institucion ON dbo.reactivo_eventos.reporte = dbo.reactivo_institucion.reporte INNER JOIN
                         dbo.reactivo_paciente ON dbo.reactivo_eventos.reporte = dbo.reactivo_paciente.reporte INNER JOIN
                         dbo.reactivo_producto ON dbo.reactivo_eventos.reporte = dbo.reactivo_producto.reporte INNER JOIN
                         dbo.reactivo_camposcomp AS rc ON dbo.reactivo_producto.reporte = rc.reporte INNER JOIN
                         dbo.reactivo_gestionrealizada AS rg ON dbo.reactivo_eventos.reporte = rg.reporte INNER JOIN
                         dbo.reactivo_reportante AS rr ON dbo.reactivo_eventos.reporte = rr.reporte INNER JOIN
                         dbo.departamentos AS d ON dbo.reactivo_institucion.cod_depart = d.cod_depart LEFT OUTER JOIN
                         dbo.municipios AS m ON dbo.reactivo_institucion.cod_mun = m.cod_mun LEFT OUTER JOIN
                         dbo.reactivo_tipodocident AS rt ON dbo.reactivo_paciente.tipidentifi = rt.cdg_tipodoc LEFT OUTER JOIN
                         dbo.reactivo_tipodispositivo AS rt2 ON rc.codigoTipoDiagnostico = rt2.cdg_tipdis LEFT OUTER JOIN
                         dbo.reactivo_causa_probable AS cp ON cp.cdg_causa = rc.codigoCausa LEFT OUTER JOIN
                         dbo.departamentos AS dp ON rr.cod_depart = dp.cod_depart LEFT OUTER JOIN
                         dbo.municipios AS mn ON rr.cod_mun = mn.cod_mun LEFT OUTER JOIN
                         dbo.reactivo_tiporeportante AS rt3 ON rc.cdg_tiporeportante = rt3.cdg_tiporeportante
                WHERE        (dbo.reactivo_eventos.clasificacion IS NULL) and
			 (dbo.reactivo_eventos.fecha_ingreso &gt;= ?1 and 
			 dbo.reactivo_eventos.fecha_ingreso &lt;= ?2)
			 order by dbo.reactivo_eventos.fecha_ingreso desc           
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Consulta de registros de reportes trimestrales con evento para secretaría -->
    <named-native-query name="consultaReportesTrimestralesSecretaria">
       <query>
                        SELECT        
                         dbo.reactivo_eventos.reporte, dbo.reactivo_institucion.institucion, d.descripcion AS departamento, m.descripcion AS ciudad, dbo.reactivo_institucion.direccion, dbo.reactivo_institucion.identificacion, 
                         (CASE dbo.reactivo_institucion.complejidad WHEN '1' THEN 'Baja' WHEN '2' THEN 'Media' WHEN '3' THEN 'Alta' WHEN '4' THEN 'No Aplica' ELSE '' END) AS complejidad, 
                         (CASE dbo.reactivo_institucion.naturaleza WHEN 'PR' THEN 'Privada' WHEN 'PU' THEN 'Publica' WHEN 'MX' THEN 'Mixta' ELSE '' END) AS naturaleza, dbo.reactivo_paciente.nombre_paciente, rt.nombre_tipodoc AS tipidentifi, 
                         dbo.reactivo_paciente.identifi, (CASE dbo.reactivo_paciente.genero WHEN 'M' THEN 'Masculino' WHEN 'F' THEN 'Femenino' ELSE 'Sin Dato' END) AS genero, dbo.reactivo_paciente.edad, 
                         (CASE dbo.reactivo_paciente.edad_en WHEN 'D' THEN 'Dias' WHEN 'M' THEN 'Mes' WHEN 'A' THEN 'Años' WHEN 'S' THEN 'Semana' ELSE 'Sin Dato' END) AS edad_en, dbo.reactivo_producto.nombre_reactivo, 
                         dbo.reactivo_producto.nroregsan, rc.expediente, rc.codigoUnicoReactivo, rt2.nombre_tipodis AS codigoTipoDiagnostico, dbo.reactivo_producto.lote, rc.referencia, dbo.reactivo_producto.fecha_venci, 
                         (CASE dbo.reactivo_producto.procedencia WHEN 'N' THEN 'Nacional' WHEN 'I' THEN 'Importado' ELSE '' END) AS procedencia, 
                         CASE dbo.reactivo_producto.cadena_frio WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS cadena_frio, dbo.reactivo_producto.temperatura, 
                         CASE rc.categoriaReactivo WHEN 1 THEN 'Categoria I' WHEN 2 THEN 'Categoria II' WHEN 3 THEN 'Categoria III' ELSE '' END AS categoriaReactivo, 
                         CASE dbo.reactivo_producto.condici_almacen WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS condici_almacen, 
                         CASE rc.indRealizaRecepcion WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS indRealizaRecepcion, CASE dbo.reactivo_producto.certi_analisis WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS certi_analisis,
                          rg.fabricante, rg.importador, 
                         CASE dbo.reactivo_producto.area_funciona WHEN 1 THEN 'Laboratorio clinico' WHEN 2 THEN 'Laboratorio salud pública' WHEN 3 THEN 'Servicio transfusional' WHEN 4 THEN 'Banco de Sangre' WHEN 5 THEN 'Banco de Tejidos'
                          WHEN 6 THEN 'Banco de Gametos' ELSE '' END AS area_funciona, dbo.reactivo_eventos.fecha_ingreso, dbo.reactivo_eventos.descrip_efecto, 
                        (select top 1 descripcion from dbo.reactivo_desenlace where cdg_desenlace = dbo.reactivo_eventos.cdg_desenlace)
                        AS desenlace, 
                         dbo.reactivo_eventos.otro_desenlace, CASE rg.gestion_riesgo WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS gestion_riesgo, 
                         CASE rg.analisis_efecto WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS analisis_efecto, 
                         CASE rg.herramienta_analisis WHEN 1 THEN 'Protocolo de Londres' WHEN 2 THEN 'AMFE' WHEN 3 THEN 'Espina de pescado' WHEN 4 THEN 'Otro/Cual' ELSE '' END AS herramienta_analisis, rg.otra_herramienta, 
                         CASE rg.causa_efecto WHEN 2 THEN 'NO' WHEN 1 THEN 'SI' ELSE '' END AS causa_efecto, cp.termino_ea AS causa_probable, cp.descripcion_ea AS descripcion_causa, cp.cdg_causa AS codigoCausa, 
                         CASE rg.acciones WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS acciones, rg.descripcion_acciones, rg.enviado_distri_import, rg.fecha_notificacion, rc.fechaEnvioReactivo, rr.nombres_apellidos, rr.profesion, 
                         rc.organizacion, rr.direccion AS direccion_reportante, rr.telefono, dp.descripcion AS cod_depart, mn.descripcion AS cod_mun, rr.email, rr.fecha_notificacion AS fecha_notificacion_reportante, 
                         CASE rr.divulgacion WHEN 'N' THEN 'NO' WHEN 'S' THEN 'SI' ELSE '' END AS divulgacion, rt3.nombre_tiporeportante AS cdg_tiporeportante, 
                         rc.estadoReporte AS estadoReporte, rc.fechaGestionEnte, rc.gestionEnte, 
                         rc.estadoGestionEnte AS estadoGestionEnte, rc.fechaGestionInvima, rc.observacionInvima,
                         rg.causa_probable as causa_probablecode,
                         (select tcaup.termino_ea from dbo.reactivo_causa_probable tcaup where tcaup.cdg_causa = rg.causa_probable) as termino,
                         (select tcaup.descripcion_ea from dbo.reactivo_causa_probable tcaup where tcaup.cdg_causa = rg.causa_probable) as descripcion_causaprob
FROM            dbo.reactivo_eventos LEFT OUTER JOIN
                         dbo.reactivo_institucion ON dbo.reactivo_eventos.reporte = dbo.reactivo_institucion.reporte INNER JOIN
                         dbo.reactivo_paciente ON dbo.reactivo_eventos.reporte = dbo.reactivo_paciente.reporte INNER JOIN
                         dbo.reactivo_producto ON dbo.reactivo_eventos.reporte = dbo.reactivo_producto.reporte INNER JOIN
                         dbo.reactivo_camposcomp AS rc ON dbo.reactivo_producto.reporte = rc.reporte INNER JOIN
                         dbo.reactivo_gestionrealizada AS rg ON dbo.reactivo_eventos.reporte = rg.reporte INNER JOIN
                         dbo.reactivo_reportante AS rr ON dbo.reactivo_eventos.reporte = rr.reporte INNER JOIN
                         dbo.departamentos AS d ON dbo.reactivo_institucion.cod_depart = d.cod_depart LEFT OUTER JOIN
                         dbo.municipios AS m ON dbo.reactivo_institucion.cod_mun = m.cod_mun LEFT OUTER JOIN
                         dbo.reactivo_tipodocident AS rt ON dbo.reactivo_paciente.tipidentifi = rt.cdg_tipodoc LEFT OUTER JOIN
                         dbo.reactivo_tipodispositivo AS rt2 ON rc.codigoTipoDiagnostico = rt2.cdg_tipdis LEFT OUTER JOIN
                         dbo.reactivo_causa_probable AS cp ON cp.cdg_causa = rc.codigoCausa LEFT OUTER JOIN
                         dbo.departamentos AS dp ON rr.cod_depart = dp.cod_depart LEFT OUTER JOIN
                         dbo.municipios AS mn ON rr.cod_mun = mn.cod_mun LEFT OUTER JOIN
                         dbo.reactivo_tiporeportante AS rt3 ON rc.cdg_tiporeportante = rt3.cdg_tiporeportante
                WHERE        
                        (dbo.reactivo_eventos.clasificacion IS NULL) and
	        (dbo.reactivo_eventos.fecha_ingreso &gt;= ?1 and 
	         dbo.reactivo_eventos.fecha_ingreso &lt;= ?2)
                        and rr.cod_depart = ?3
                        order by dbo.reactivo_eventos.fecha_ingreso desc           
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Consulta de Reporte de Evento Adverso Administrador -->
    <named-native-query name="reporteEventoAdversoAdministrador">
       <query>
            SELECT  
            reactivo_eventos.reporte ,
            reactivo_eventos.descrip_efecto ,
            reactivo_eventos.fecha_ingreso ,
            reactivo_eventos.fech_evento,
            reactivo_eventos.efecto_indeseado,
            reactivo_eventos.fech_reporte,
            reactivo_eventos.cdg_problema,
            reactivo_eventos.clasificacion,
            reactivo_institucion.institucion ,
            reactivo_institucion.identificacion ,
            reactivo_institucion.direccion ,
            reactivo_institucion.naturaleza ,
            reactivo_institucion.complejidad,
            reactivo_institucion.cod_depart,
            reactivo_institucion.cod_mun,
            reactivo_institucion.email,
            reactivo_institucion.telefono,
            reactivo_paciente.nombre_paciente ,
            reactivo_paciente.tipidentifi ,
            reactivo_paciente.identifi ,
            reactivo_paciente.edad,
            reactivo_paciente.edad_en,
            reactivo_paciente.genero,
            reactivo_paciente.direcc_paciente,
            reactivo_paciente.telefo_paciente,
            reactivo_producto.nombre_reactivo ,
            reactivo_producto.nroregsan ,
            reactivo_producto.fecha_venci ,
            reactivo_producto.lote,
            reactivo_producto.procedencia,
            reactivo_producto.cadena_frio,
            reactivo_producto.temperatura,
            reactivo_producto.certi_analisis,
            reactivo_producto.distri_usuario,
            reactivo_producto.condici_almacen,
            reactivo_producto.area_funciona,
            reactivo_producto.otra_area,
            CASE rg.causa_efecto WHEN '2' THEN 'NO' WHEN '1' THEN 'SI' ELSE '' END AS causa_efecto, 
            cp.termino_ea AS causa_probable,
            rg.importador AS notifico_importador,
            rg.fabricante AS notifico_fabricante,
            rg.comercializador AS notifico_comercializador,
            rg.distribuidor AS notifico_distribuidor,
            rg.fecha_notificacion,
            rg.enviado_distri_import,
            CASE rg.gestion_riesgo WHEN 'NO' THEN 'NO' WHEN 'SI' THEN 'SI' ELSE '' END AS gestion_riesgo,
            CASE rg.analisis_efecto WHEN 'NO' THEN 'NO' WHEN 'SI' THEN 'SI' ELSE '' END AS analisis_efecto, 
            CASE rg.herramienta_analisis WHEN '1' THEN 'Protocolo de Londres' WHEN '2' THEN 'AMFE' WHEN '3' THEN 'Espina de pescado' WHEN '4' THEN 'Otro/Cual' ELSE '' END AS herramienta_analisis, 
            rg.otra_herramienta,
            rg.descripcion_causa AS descripcion_causa, 
            CASE rg.acciones WHEN 'NO' THEN 'NO' WHEN 'SI' THEN 'SI' ELSE '' END AS acciones,
            rg.descripcion_acciones as descripcion_acciones,
            rg.causa_probable as causa_probablecode,
            (select tcaup.termino_ea from dbo.reactivo_causa_probable tcaup where CAST(tcaup.cdg_causa AS varchar(max)) = CAST(rg.causa_probable AS varchar(max))) as termino,
            (select tcaup.descripcion_ea from dbo.reactivo_causa_probable tcaup where CAST(tcaup.cdg_causa AS varchar(max)) =  CAST(rg.causa_probable AS varchar(max))) as descripcion_causaprob
            FROM 
                reactivo_eventos  
                left join  reactivo_institucion on  reactivo_eventos.reporte = reactivo_institucion.reporte
                left join  reactivo_paciente  on reactivo_eventos.reporte = reactivo_paciente.reporte
                left join  reactivo_producto on reactivo_eventos.reporte = reactivo_producto.reporte
                left join  reactivo_camposcomp on reactivo_eventos.reporte = reactivo_camposcomp.reporte
                left join  reactivo_gestionrealizada AS rg on dbo.reactivo_eventos.reporte = rg.reporte 
                LEFT OUTER JOIN dbo.reactivo_causa_probable AS cp on cp.cdg_causa = reactivo_camposcomp.codigoCausa           
            WHERE isnull(clasificacion,'0') != '0' 
            and (reactivo_eventos.fecha_ingreso &gt;= ?1) and          
            (reactivo_eventos.fecha_ingreso &lt;= ?2)
           
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!--  Consulta de Reporte de Evento Adverso Secretaría -->
    <named-native-query name="reporteEventoAdversoSecretaria">
       <query>
            SELECT  
            reactivo_eventos.reporte ,
            reactivo_eventos.descrip_efecto ,
            reactivo_eventos.fecha_ingreso ,
            reactivo_eventos.fech_evento,
            reactivo_eventos.efecto_indeseado,
            reactivo_eventos.fech_reporte,
            reactivo_eventos.cdg_problema,
            reactivo_eventos.clasificacion,
            reactivo_institucion.institucion ,
            reactivo_institucion.identificacion ,
            reactivo_institucion.direccion ,
            reactivo_institucion.naturaleza ,
            reactivo_institucion.complejidad,
            reactivo_institucion.cod_depart,
            reactivo_institucion.cod_mun,
            reactivo_institucion.email,
            reactivo_institucion.telefono,
            reactivo_paciente.nombre_paciente ,
            reactivo_paciente.tipidentifi ,
            reactivo_paciente.identifi ,
            reactivo_paciente.edad,
            reactivo_paciente.edad_en,
            reactivo_paciente.genero,
            reactivo_paciente.direcc_paciente,
            reactivo_paciente.telefo_paciente,
            reactivo_producto.nombre_reactivo ,
            reactivo_producto.nroregsan ,
            reactivo_producto.fecha_venci ,
            reactivo_producto.lote,
            reactivo_producto.procedencia,
            reactivo_producto.cadena_frio,
            reactivo_producto.temperatura,
            reactivo_producto.certi_analisis,
            reactivo_producto.distri_usuario,
            reactivo_producto.condici_almacen,
            reactivo_producto.area_funciona,
            reactivo_producto.otra_area,
            CASE rg.causa_efecto WHEN '2' THEN 'NO' WHEN '1' THEN 'SI' ELSE '' END AS causa_efecto, 
            cp.termino_ea AS causa_probable,
            rg.importador AS notifico_importador,
            rg.fabricante AS notifico_fabricante,
            rg.comercializador AS notifico_comercializador,
            rg.distribuidor AS notifico_distribuidor,
            rg.fecha_notificacion,
            rg.enviado_distri_import,
            CASE rg.gestion_riesgo WHEN 'NO' THEN 'NO' WHEN 'SI' THEN 'SI' ELSE '' END AS gestion_riesgo,
            CASE rg.analisis_efecto WHEN 'NO' THEN 'NO' WHEN 'SI' THEN 'SI' ELSE '' END AS analisis_efecto, 
            CASE rg.herramienta_analisis WHEN '1' THEN 'Protocolo de Londres' WHEN '2' THEN 'AMFE' WHEN '3' THEN 'Espina de pescado' WHEN '4' THEN 'Otro/Cual' ELSE '' END AS herramienta_analisis, 
            rg.otra_herramienta,
            rg.descripcion_causa AS descripcion_causa, 
            CASE rg.acciones WHEN 'NO' THEN 'NO' WHEN 'SI' THEN 'SI' ELSE '' END AS acciones,
            rg.descripcion_acciones as descripcion_acciones,
            rg.causa_probable as causa_probablecode,
            (select tcaup.termino_ea from dbo.reactivo_causa_probable tcaup where CAST(tcaup.cdg_causa AS varchar(max)) = CAST(rg.causa_probable AS varchar(max))) as termino,
            (select tcaup.descripcion_ea from dbo.reactivo_causa_probable tcaup where CAST(tcaup.cdg_causa AS varchar(max)) =  CAST(rg.causa_probable AS varchar(max))) as descripcion_causaprob
            FROM 
                reactivo_eventos  
                left join  reactivo_institucion on  reactivo_eventos.reporte = reactivo_institucion.reporte
                left join  reactivo_paciente  on reactivo_eventos.reporte = reactivo_paciente.reporte
                left join  reactivo_producto on reactivo_eventos.reporte = reactivo_producto.reporte
                left join  reactivo_camposcomp on reactivo_eventos.reporte = reactivo_camposcomp.reporte
                left join  reactivo_gestionrealizada AS rg on dbo.reactivo_eventos.reporte = rg.reporte 
                LEFT OUTER JOIN dbo.reactivo_causa_probable AS cp on cp.cdg_causa = reactivo_camposcomp.codigoCausa           
        WHERE isnull(clasificacion,'0') != '0' and 
            dbo.reactivo_institucion.cod_depart = ?1  and 
           (reactivo_eventos.fecha_ingreso &gt;= ?2) and          
           (reactivo_eventos.fecha_ingreso &lt;= ?3)
       </query>
    </named-native-query>
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
    <!-- ********************************************************************************** -->
</entity-mappings>